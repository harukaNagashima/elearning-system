# docker-compose.yml

services:
  # MySQL Database
  db:
    image: mysql:8.0
    container_name: elearning_db
    environment:
      MYSQL_ROOT_PASSWORD: rootpassword
      MYSQL_DATABASE: elearning_db
      MYSQL_USER: elearning_user
      MYSQL_PASSWORD: elearning_pass
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - elearning_network

  # Redis (for Celery)
  redis:
    image: redis:7-alpine
    container_name: elearning_redis
    ports:
      - "6379:6379"
    networks:
      - elearning_network

  # Django Backend
  backend:
    build: 
      context: ./backend
      dockerfile: Dockerfile
    container_name: elearning_backend
    environment:
      - DEBUG=1
      - DJANGO_SETTINGS_MODULE=elearning.settings.development
      - DB_HOST=db
      - DB_NAME=elearning_db
      - DB_USER=elearning_user
      - DB_PASSWORD=elearning_pass
      - REDIS_URL=redis://redis:6379/0
    ports:
      - "8000:8000"
    volumes:
      - ./backend:/app
      - ./data:/app/data  # CSVファイル用
    depends_on:
      - db
      - redis
    networks:
      - elearning_network
    command: >
      sh -c "
        echo 'Waiting for MySQL to be ready...' &&
        while ! nc -z db 3306; do sleep 1; done &&
        echo 'MySQL is ready!' &&
        python manage.py migrate &&
        python manage.py runserver 0.0.0.0:8000
      "

  # React Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: elearning_frontend
    environment:
      - REACT_APP_API_URL=http://localhost:8000/api
      - REACT_APP_PRIMARY_COLOR=#40b87c
      - REACT_APP_DARK_COLOR=#27313b
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    depends_on:
      - backend
    networks:
      - elearning_network

volumes:
  mysql_data:

networks:
  elearning_network:
    driver: bridge
